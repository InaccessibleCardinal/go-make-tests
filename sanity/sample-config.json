{"Language":"Go","Framework":"standard library","CodeInput":"package svc\n\nimport (\n\t\"encoding/json\"\n\t\"io/fs\"\n)\n\ntype FileHandlerIface interface {\n\tReadFile(name string) ([]byte, error)\n\tWriteFile(name string, data []byte, perm fs.FileMode) error\n}\n\ntype FileServiceIface interface {\n\tReadFile(string) (string, error)\n\tSaveFile(fileName string, content string) error\n\tSaveJson(fileName string, content any) error\n}\n\ntype FileService struct {\n\treader func(name string) ([]byte, error)\n\twriter func(name string, data []byte, perm fs.FileMode) error\n}\n\nfunc (fls FileService) ReadFile(fileName string) (string, error) {\n\tbts, err := fls.reader(fileName)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\treturn string(bts), nil\n}\n\nfunc (fls FileService) SaveFile(fileName, content string) error {\n\terr := fls.writer(fileName, []byte(content), 0777)\n\tif err != nil {\n\t\treturn err\n\t}\n\treturn nil\n}\n\nfunc (fls FileService) SaveJson(fileName string, content any) error {\n\n\tmarshaled, err := json.Marshal(content)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\terr = fls.writer(fileName, marshaled, 0777)\n\tif err != nil {\n\t\treturn err\n\t}\n\treturn nil\n}\n\nfunc NewFileService(\n\treader func(name string) ([]byte, error),\n\twriter func(name string, data []byte, perm fs.FileMode) error,\n) FileServiceIface {\n\treturn FileService{reader: reader, writer: writer}\n}\n","OutFile":"internal/svc/files_test.go"}